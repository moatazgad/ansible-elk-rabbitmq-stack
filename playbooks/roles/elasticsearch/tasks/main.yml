---
# tasks file for roles/elasticsearch

- name: Add Elastic GPG key
  ansible.builtin.apt:
    deb: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
    state: present
  register: elastic_key_added
  ignore_errors: true

- name: Download and save GPG key manually (if apt module doesn't work)
  shell: |
    wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | gpg --dearmor --yes -o /usr/share/keyrings/elasticsearch-keyring.gpg
  when: elastic_key_added is failed

- name: Ensure apt-transport-https is installed
  apt:
    name: apt-transport-https
    state: present
    update_cache: yes

- name: Add Elasticsearch APT repository
  copy:
    dest: /etc/apt/sources.list.d/elastic-9.x.list
    content: 'deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/9.x/apt stable main'
    owner: root
    group: root
    mode: '0644'

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install Elasticsearch
  apt:
    name: elasticsearch
    state: present

# - name: Reload systemd daemon
#   systemd:
#     daemon_reload: yes

# - name: Enable Elasticsearch service
#   systemd:
#     name: elasticsearch.service
#     enabled: yes

# - name: Start Elasticsearch service
#   systemd:
#     name: elasticsearch.service
#     state: started

# Optional: Reset elastic user password â€” may require service to be fully up
# - name: Wait for Elasticsearch to be responsive on port 9200
#   wait_for:
#     port: 9200
#     delay: 10
#     timeout: 60

# - name: Reset elastic user password using expect
#   expect:
#     command: '/usr/share/elasticsearch/bin/elasticsearch-reset-password -u {{ elastic_user }} -i'
#     responses:
#       'Please confirm that you would like to continue \[y/N\]': 'y'
#       'Enter password for \[elastic\]:': '{{ elastic_password }}'
#       'Re-enter password for \[elastic\]:': '{{ elastic_password }}'
#     timeout: 60  # Adjust timeout as needed
#   register: reset_password_result
#   no_log: true   # Ensures the password is not logged


# - name: Reset elastic user password
#   command: /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic --batch -p "{{ elastic_password }}"

# - name: Reset elastic user password
#   command: /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic --batch
#   register: reset_output


# - name: Show password output
#   debug:
#     var: reset_output.stdout_lines
